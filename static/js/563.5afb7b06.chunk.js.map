{"version":3,"file":"static/js/563.5afb7b06.chunk.js","mappings":"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","sources":["API/getPriceForChart.js","components/Chart/Chart.jsx","API/getData.js","components/LastMinedBlock/LastMinedBlock.js","components/SearchBox/SearchBox.js","pages/Home.js"],"sourcesContent":["import axios from 'axios';\n\nexport const getPriceEthMonth = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.coincap.io/v2/assets/ethereum/history?interval=d1'\n    );\n    const data = response.data;\n\n    console.log('data.rev', data.data.reverse());\n    const dataReverse = data.data.reverse();\n\n    const price = dataReverse.map(item => {\n      return item;\n    });\n\n    const pricePerMonth = price.slice(330);\n\n    return pricePerMonth;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from 'react';\nimport { format } from 'date-fns';\nimport { Line } from 'react-chartjs-2';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip,\n} from 'chart.js';\nimport { getPriceEthMonth } from 'API/getPriceForChart';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip\n);\n\nexport const Chart = () => {\n  const [price, setPrice] = useState([]);\n  const [date, setDate] = useState([]);\n\n  useEffect(() => {\n    async function getDataPrice() {\n      const data = await getPriceEthMonth();\n      setPrice(data.map(item => Math.floor(item.priceUsd)));\n      setDate(data.map(item => format(item.time, 'MM/dd/yyyy')));\n    }\n    getDataPrice();\n  }, []);\n\n  const data = {\n    labels: date.map(item => item),\n    datasets: [\n      {\n        label: 'Price $',\n        data: price.map(item => item),\n        borderColor: 'black',\n        pointBorderWidth: 0,\n        pointBackgroundColor: 'transparent',\n        borderWidth: 2.5,\n        tension: 0.5,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {},\n    gridLines: false,\n    scales: {\n      x: {\n        grid: {\n          display: false,\n        },\n      },\n      y: {\n        grid: {\n          display: false,\n        },\n      },\n    },\n  };\n\n  return (\n    <>\n      {price.length > 1 && (\n        <div style={{ maxWidth: '300px', maxHeight: '200px' }}>\n          <Line data={data} options={options}></Line>\n        </div>\n      )}\n    </>\n  );\n};\n","import axios from 'axios';\nimport { ethers } from 'ethers';\n\nconst network = 'homestead';\n\nconst provider = ethers.getDefaultProvider(network, {\n  etherscan: 'RRGX2T9UHU34WNT1V78GWJMGFSUKFFX6ID',\n  infura: '80a2cde872574b6380285aedb7c3fc77',\n  alchemy: 'NGRnDW4RdxfHH_ZgkWkvds6I3wiEQcGi',\n  pocket: {\n    applicationId: '49753bca74527ebbbfcd8d63',\n    applicationSecretKey: 'da5ab6ab31ea0cb93b639a4f86648449',\n  },\n});\n\nexport const getTransactionData = async hash => {\n  try {\n    const transactionData = await provider.getTransaction(hash);\n    console.log('transactionData', transactionData);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTransactionList = async () => {\n  try {\n    const data = await provider.getBlock();\n    const transaction = data.transactions.slice(0, 10);\n    console.log('transactionList', transaction);\n\n    console.log('data', data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getGasPrice = async () => {\n  try {\n    const data = await provider.getGasPrice();\n    const gasPrice = ethers.utils.formatUnits(data, 'gwei');\n    console.log('gasPrice', gasPrice);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getEthPrice = async () => {\n  try {\n    const { data } = await axios.get(\n      'https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD'\n    );\n\n    console.log('ETH Price in USD', data.USD);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getLastMinedBlock = async () => {\n  try {\n    const data = await provider.getBlockNumber();\n    console.log('last mined block number', data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { useState, useEffect } from 'react';\nimport { getLastMinedBlock } from '../../API/getData';\n\nexport const LastMinedBlock = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    async function getMinedBlockData() {\n      const data = await getLastMinedBlock();\n      setData(data);\n      console.log('inside component', data);\n    }\n    getMinedBlockData();\n  }, []);\n\n  return (\n    <div>\n      <hr />\n      <p>The most recently mined block</p>\n      <b>{data}</b>\n      <hr />\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { HiSearch } from 'react-icons/hi';\nimport { SiEthereum } from 'react-icons/si';\n\nexport const SearchBox = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleChange = e => {\n    setSearchQuery(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    console.log(`Query:`, searchQuery);\n\n    setSearchQuery('');\n  };\n\n  return (\n    <div>\n      <h2>\n        <SiEthereum size=\"36px\" color=\"#0b5394\" /> ETH Chain Explorer\n      </h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          placeholder=\"Search by Address or Txn Hash\"\n          autoFocus\n          required\n          onChange={handleChange}\n        />\n        <button type=\"submit\">\n          <HiSearch size=\"20px\" color=\"#66161c\" />\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { Chart } from 'components/Chart/Chart';\nimport { LastMinedBlock } from 'components/LastMinedBlock/LastMinedBlock';\n\n// import { Helmet } from 'react-helmet';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nexport default function Home() {\n  return (\n    <div>\n      {/* <Helmet>\n        <title>Home</title>\n      </Helmet> */}\n      <h1 className=\"text-3xl font-bold underline\">EthScanGo</h1>\n      <SearchBox />\n      <LastMinedBlock />\n      <div>\n        <Chart />\n      </div>\n    </div>\n  );\n}\n"],"names":["getPriceEthMonth","axios","response","data","console","log","reverse","dataReverse","price","map","item","pricePerMonth","slice","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","Chart","useState","setPrice","date","setDate","useEffect","Math","floor","priceUsd","format","time","getDataPrice","labels","datasets","label","borderColor","pointBorderWidth","pointBackgroundColor","borderWidth","tension","length","style","maxWidth","maxHeight","options","responsive","plugins","gridLines","scales","x","grid","display","y","provider","ethers","etherscan","infura","alchemy","pocket","applicationId","applicationSecretKey","getLastMinedBlock","getBlockNumber","LastMinedBlock","setData","getMinedBlockData","SearchBox","searchQuery","setSearchQuery","size","color","onSubmit","e","preventDefault","type","name","value","autoComplete","placeholder","autoFocus","required","onChange","currentTarget","Home","className"],"sourceRoot":""}
{"version":3,"file":"static/js/45.41dc6388.chunk.js","mappings":"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","sources":["API/getData.js","pages/Address.js"],"sourcesContent":["import axios from 'axios';\nimport { ethers } from 'ethers';\n\nconst network = 'homestead';\n\nconst provider = ethers.getDefaultProvider(network, {\n  etherscan: 'RRGX2T9UHU34WNT1V78GWJMGFSUKFFX6ID',\n  infura: '80a2cde872574b6380285aedb7c3fc77',\n  alchemy: 'NGRnDW4RdxfHH_ZgkWkvds6I3wiEQcGi',\n  // pocket: {\n  //   applicationId: '49753bca74527ebbbfcd8d63',\n  //   applicationSecretKey: 'da5ab6ab31ea0cb93b639a4f86648449',\n  // },\n});\n\nexport const getTransactionData = async transactionHash => {\n  try {\n    const data = await provider.getTransaction(transactionHash);\n\n    if (!data) return null;\n\n    const { hash, blockNumber, from, to, value } = data;\n\n    return {\n      hash,\n      blockNumber,\n      from,\n      to,\n      value: ethers.utils.formatEther(value._hex),\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTransactionLis = async () => {\n  try {\n    const data = await provider.getBlockWithTransactions();\n    const transaction = data.transactions.slice(0, 10);\n\n    return transaction;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getBalance = async addressnum => {\n  try {\n    const data = await provider.getBalance(addressnum);\n    const balance = ethers.utils.formatEther(data._hex);\n    return balance.slice(0, 7);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getGasPrice = async () => {\n  try {\n    const data = await provider.getGasPrice();\n    const gasPrice = ethers.utils.formatUnits(data, 'gwei');\n\n    return Number(gasPrice);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getEthPrice = async () => {\n  try {\n    const { data } = await axios.get(\n      'https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD'\n    );\n\n    return Number(data.USD);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getLastMinedBlock = async () => {\n  try {\n    const data = await provider.getBlockNumber();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { getBalance, getEthPrice, getTransactionLis } from 'API/getData';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useParams } from 'react-router-dom';\n\nexport default function Address() {\n  const { addressnum } = useParams(null);\n  const [balance, setBalance] = useState(null);\n  const [ethPrice, setEthPrice] = useState(null);\n  const [transaction, setTransaction] = useState([]);\n  const [signUp, setSignUp] = useState(false);\n\n  useEffect(() => {\n    async function getBalanceData() {\n      const balanceData = await getBalance(addressnum);\n      setBalance(balanceData);\n\n      const priceEth = await getEthPrice();\n      setEthPrice(priceEth);\n\n      const data = await getTransactionLis();\n      setTransaction(data);\n    }\n\n    getBalanceData();\n  }, [addressnum]);\n\n  const hoverOnOff = () => {\n    setSignUp(p => !p);\n  };\n\n  return (\n    <>\n      {\n        <Helmet>\n          <title>Address</title>\n        </Helmet>\n      }\n\n      <main className=\"px-2 py-4\">\n        <div className=\"container mx-auto px-4\">\n          <h1 className=\"text-2xl mb-5\">Address {addressnum}</h1>\n          <p className=\"font-bold mb-3\">Overview</p>\n\n          {balance && ethPrice && (\n            <>\n              <div className=\"grid grid-cols-4 md:gap-4 text-sm overflow-x-auto\">\n                <div>Balance:</div>\n                <div className=\"col-span-4 md:col-span-3 mb-2 md:mb-0\">\n                  {balance} Ether\n                </div>\n\n                <div>Ether Value:</div>\n                <div className=\"col-span-4 md:col-span-3 mb-2 md:mb-0\">\n                  {ethPrice * Number(balance)} $\n                  <p className=\"text-sm text-stone-300\">(@ ${ethPrice}/ETH)</p>\n                </div>\n              </div>\n\n              {signUp && <div>Register to unlock this content</div>}\n              <div\n                className=\"blur-sm\"\n                onMouseEnter={hoverOnOff}\n                onMouseLeave={hoverOnOff}\n              >\n                <ul>\n                  {transaction.map(item => (\n                    <li key={item.hash}>{item.hash}</li>\n                  ))}\n                </ul>\n              </div>\n            </>\n          )}\n        </div>\n      </main>\n    </>\n  );\n}\n"],"names":["provider","ethers","etherscan","infura","alchemy","getTransactionData","transactionHash","getTransaction","data","hash","blockNumber","from","to","value","_hex","console","log","getTransactionLis","getBlockWithTransactions","transaction","transactions","slice","getBalance","addressnum","balance","getGasPrice","gasPrice","Number","getEthPrice","axios","USD","getLastMinedBlock","getBlockNumber","Address","useParams","useState","setBalance","ethPrice","setEthPrice","setTransaction","signUp","setSignUp","useEffect","balanceData","priceEth","getBalanceData","hoverOnOff","p","className","onMouseEnter","onMouseLeave","map","item"],"sourceRoot":""}
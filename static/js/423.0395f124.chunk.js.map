{"version":3,"file":"static/js/423.0395f124.chunk.js","mappings":"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","sources":["API/getData.js","API/getPriceForChart.js","components/Chart/Chart.js","components/LastMinedBlock/LastMinedBlock.js","components/SearchBox/SearchBox.js","components/GasPrice/GasPrice.js","components/TransactionList/TransactionList.js","pages/Home.js"],"sourcesContent":["import axios from 'axios';\nimport { ethers } from 'ethers';\n\nconst network = 'homestead';\n\nconst provider = ethers.getDefaultProvider(network, {\n  etherscan: 'RRGX2T9UHU34WNT1V78GWJMGFSUKFFX6ID',\n  infura: '80a2cde872574b6380285aedb7c3fc77',\n  alchemy: 'NGRnDW4RdxfHH_ZgkWkvds6I3wiEQcGi',\n  // pocket: {\n  //   applicationId: '49753bca74527ebbbfcd8d63',\n  //   applicationSecretKey: 'da5ab6ab31ea0cb93b639a4f86648449',\n  // },\n});\n\nexport const getTransactionData = async transactionHash => {\n  try {\n    const data = await provider.getTransaction(transactionHash);\n\n    if (!data) return null;\n\n    const { hash, blockNumber, from, to, value } = data;\n\n    return {\n      hash,\n      blockNumber,\n      from,\n      to,\n      value: ethers.utils.formatEther(value._hex),\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTransactionLis = async () => {\n  try {\n    const data = await provider.getBlockWithTransactions();\n    const transaction = data.transactions.slice(0, 10);\n\n    return transaction;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getBalance = async addressnum => {\n  try {\n    const data = await provider.getBalance(addressnum);\n    const balance = ethers.utils.formatEther(data._hex);\n    return balance.slice(0, 7);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getGasPrice = async () => {\n  try {\n    const data = await provider.getGasPrice();\n    const gasPrice = ethers.utils.formatUnits(data, 'gwei');\n\n    return Number(gasPrice);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getEthPrice = async () => {\n  try {\n    const { data } = await axios.get(\n      'https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD'\n    );\n\n    return Number(data.USD);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getLastMinedBlock = async () => {\n  try {\n    const data = await provider.getBlockNumber();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import axios from 'axios';\n\nexport const getPriceEthMonth = async () => {\n  try {\n    const response = await axios.get(\n      'https://api.coincap.io/v2/assets/ethereum/history?interval=d1'\n    );\n    const data = response.data.data;\n\n    const price = data.map(item => {\n      return item;\n    });\n    const pricePerMonth = price.slice(330);\n\n    return pricePerMonth;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from 'react';\nimport { format } from 'date-fns';\nimport { Line } from 'react-chartjs-2';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip,\n} from 'chart.js';\nimport { getPriceEthMonth } from 'API/getPriceForChart';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip\n);\n\nexport const Chart = () => {\n  const [price, setPrice] = useState([]);\n  const [date, setDate] = useState([]);\n\n  useEffect(() => {\n    async function getDataPrice() {\n      const data = await getPriceEthMonth();\n      setPrice(data.map(item => Math.floor(item.priceUsd)));\n      setDate(data.map(item => format(item.time, 'MM/dd/yyyy')));\n    }\n    getDataPrice();\n  }, []);\n\n  const data = {\n    labels: date.map(item => item),\n    datasets: [\n      {\n        label: 'Price $',\n        data: price.map(item => item),\n        borderColor: 'black',\n        pointBorderWidth: 0,\n        pointBackgroundColor: 'transparent',\n        borderWidth: 2.5,\n        tension: 0.5,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {},\n    gridLines: false,\n    scales: {\n      x: {\n        grid: {\n          display: false,\n        },\n      },\n      y: {\n        grid: {\n          display: false,\n        },\n      },\n    },\n  };\n\n  return (\n    <>\n      {price.length > 1 && (\n        <div style={{ maxWidth: '300px', maxHeight: '200px' }}>\n          <Line data={data} options={options}></Line>\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getLastMinedBlock } from '../../API/getData';\n\nexport const LastMinedBlock = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    async function getMinedBlockData() {\n      const data = await getLastMinedBlock();\n      setData(data);\n      console.log('inside component', data);\n    }\n    getMinedBlockData();\n  }, []);\n\n  return (\n    <div>\n      <hr />\n      <p>The most recently mined block</p>\n      <b>{data}</b>\n      <hr />\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { HiSearch } from 'react-icons/hi';\nimport { SiEthereum } from 'react-icons/si';\n\nexport const SearchBox = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleChange = e => {\n    setSearchQuery(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    console.log(`Query:`, searchQuery);\n\n    setSearchQuery('');\n  };\n\n  return (\n    <div>\n      <h2>\n        <SiEthereum size=\"36px\" color=\"#0b5394\" /> ETH Chain Explorer\n      </h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          placeholder=\"Search by Address or Txn Hash\"\n          autoFocus\n          required\n          onChange={handleChange}\n        />\n        <button type=\"submit\">\n          <HiSearch size=\"20px\" color=\"#66161c\" />\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getGasPrice } from '../../API/getData';\nimport { RiGasStationFill } from 'react-icons/ri';\n\nexport const GasPrice = () => {\n  const [gasPrice, setGasPrice] = useState(0);\n\n  useEffect(() => {\n    async function getGasPriceData() {\n      const data = await getGasPrice();\n      setGasPrice(data);\n    }\n    getGasPriceData();\n  }, []);\n\n  return (\n    <>\n      {gasPrice ? (\n        <div>\n          <hr />\n          <RiGasStationFill />\n          <p>MED GAS PRICE</p>\n          <b>{Math.floor(gasPrice)} Gwei</b>\n          <hr />\n        </div>\n      ) : null}\n    </>\n  );\n};\n","import { getTransactionLis } from 'API/getData';\nimport { useState, useEffect } from 'react';\nimport { FaStream } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nexport const TransactionList = () => {\n  const [transaction, setTransaction] = useState([]);\n\n  useEffect(() => {\n    async function getTransaction() {\n      const data = await getTransactionLis();\n      setTransaction(data);\n    }\n    getTransaction();\n  }, []);\n\n  return (\n    <>\n      <div className=\"container max-w-xs\">\n        <ul>\n          {transaction.length > 0 &&\n            transaction.map(item => {\n              return (\n                <li key={item.hash}>\n                  <div className=\"flex flex-col mb-2 md:mb-0\">\n                    <FaStream style={{ marginRight: '5px' }} />\n                    <Link to={`transactions/${item.hash}`}>\n                      <p className=\"text-sm\">{item.hash}</p>\n                    </Link>\n\n                    <p className=\"text-xs\">from</p>\n                    <Link to={`address/${item.from}`}>\n                      <p className=\"text-xs\">{item.from}</p>\n                    </Link>\n\n                    <p className=\"text-xs\">to</p>\n                    <Link to={`address/${item.from}`}>\n                      <p className=\"text-xs\">{item.to}</p>\n                    </Link>\n                  </div>\n                </li>\n              );\n            })}\n        </ul>\n      </div>\n    </>\n  );\n};\n","import { Chart } from 'components/Chart/Chart';\nimport { LastMinedBlock } from 'components/LastMinedBlock/LastMinedBlock';\nimport { Helmet } from 'react-helmet-async';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { GasPrice } from 'components/GasPrice/GasPrice';\nimport { TransactionList } from 'components/TransactionList/TransactionList';\n\nexport default function Home() {\n  return (\n    <div>\n      {\n        <Helmet>\n          <title>Home</title>\n        </Helmet>\n      }\n      <h1 className=\"text-3xl font-bold underline\">EthScanGo</h1>\n      <SearchBox />\n      <LastMinedBlock />\n      <GasPrice />\n      <div>\n        <Chart />\n      </div>\n      <TransactionList />\n    </div>\n  );\n}\n"],"names":["provider","ethers","etherscan","infura","alchemy","getTransactionData","transactionHash","getTransaction","data","hash","blockNumber","from","to","value","_hex","console","log","getTransactionLis","getBlockWithTransactions","transaction","transactions","slice","getBalance","addressnum","balance","getGasPrice","gasPrice","Number","getEthPrice","axios","USD","getLastMinedBlock","getBlockNumber","getPriceEthMonth","response","price","map","item","pricePerMonth","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","Chart","useState","setPrice","date","setDate","useEffect","Math","floor","priceUsd","format","time","getDataPrice","labels","datasets","label","borderColor","pointBorderWidth","pointBackgroundColor","borderWidth","tension","length","style","maxWidth","maxHeight","options","responsive","plugins","gridLines","scales","x","grid","display","y","LastMinedBlock","setData","getMinedBlockData","SearchBox","searchQuery","setSearchQuery","size","color","onSubmit","e","preventDefault","type","name","autoComplete","placeholder","autoFocus","required","onChange","currentTarget","GasPrice","setGasPrice","getGasPriceData","TransactionList","setTransaction","className","marginRight","Home"],"sourceRoot":""}